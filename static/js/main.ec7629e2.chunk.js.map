{"version":3,"sources":["Redux/Reducers/Study.reducer.js","Redux/Store/store.js","Components/Constants.js","Components/AutocompleteComponent.jsx","Redux/Actions/Study.actions.js","Components/FormInput.component.jsx","Components/FormButton.component.jsx","Modules/Study/Study.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","studies","middleWwares","logger","rootReducer","combineReducers","study","state","action","type","payload","store","createStore","applyMiddleware","filterConditions","top100Films","title","year","AutocompleteComponent","useState","inputValue","setInputValue","checked","setChecked","filterValue","setFilterValue","useEffect","input","slice","lastIndexOf","length","reverse","join","concat","handleChange","event","target","Set","name","filter","fv","handleInputChange","value","style","width","display","justifyContent","margin","map","filterCondition","index","alignItems","Checkbox","id","color","inputProps","onChange","Autocomplete","getOptionLabel","option","options","filterOptions","inputOnFilter","indexOf","includes","size","flexGrow","padding","textContent","renderInput","params","TextField","variant","placeholder","FormInput","label","handleInput","otherProps","flexDirection","FormButton","handleClick","Button","onClick","connect","dispatch","setStudies","setStudy","console","log","sduty","a","promisify","item","time","Promise","resolve","reject","setTimeout","b","c","all","then","res","race","sequence","App","className","exact","path","component","Study","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec7629e2.chunk.js","sourcesContent":["const initialState = {\r\n  studies: [],\r\n};\r\nexport const studyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_STUDY\":\r\n      return { ...state, studies: [...state.studies, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { studyReducer } from \"../Reducers/Study.reducer\";\r\n\r\nconst middleWwares = [logger];\r\n\r\nconst rootReducer = combineReducers({ study: studyReducer });\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleWwares));\r\n","export const filterConditions = [\r\n  \"Instance state\",\r\n  \"Instance state 2\",\r\n  \"Instance state 3\",\r\n  \"Instance state 4\",\r\n];\r\n\r\nexport const top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: \"Pulp Fiction\", year: 1994 },\r\n  { title: \"The Lord of the Rings The Return of the King\", year: 2003 },\r\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  { title: \"Fight Club\", year: 1999 },\r\n  { title: \"The Lord of the Rings The Fellowship of the Ring\", year: 2001 },\r\n  { title: \"Star Wars Episode V - The Empire Strikes Back\", year: 1980 },\r\n  { title: \"Forrest Gump\", year: 1994 },\r\n  { title: \"Inception\", year: 2010 },\r\n  { title: \"The Lord of the Rings The Two Towers\", year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: \"Goodfellas\", year: 1990 },\r\n  { title: \"The Matrix\", year: 1999 },\r\n  { title: \"Seven Samurai\", year: 1954 },\r\n  { title: \"Star Wars\", year: 1977 },\r\n  { title: \"City of God\", year: 2002 },\r\n  { title: \"Se7en\", year: 1995 },\r\n  { title: \"The Silence of the Lambs\", year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: \"Life Is Beautiful\", year: 1997 },\r\n  { title: \"The Usual Suspects\", year: 1995 },\r\n  { title: \"LÃ©on The Professional\", year: 1994 },\r\n  { title: \"Spirited Away\", year: 2001 },\r\n  { title: \"Saving Private Ryan\", year: 1998 },\r\n  { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  { title: \"American History X\", year: 1998 },\r\n  { title: \"Interstellar\", year: 2014 },\r\n  { title: \"Casablanca\", year: 1942 },\r\n  { title: \"City Lights\", year: 1931 },\r\n  { title: \"Psycho\", year: 1960 },\r\n  { title: \"The Green Mile\", year: 1999 },\r\n  { title: \"The Intouchables\", year: 2011 },\r\n  { title: \"Modern Times\", year: 1936 },\r\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\r\n  { title: \"Rear Window\", year: 1954 },\r\n  { title: \"The Pianist\", year: 2002 },\r\n  { title: \"The Departed\", year: 2006 },\r\n  { title: \"Terminator 2\", year: 1991 },\r\n  { title: \"Back to the Future\", year: 1985 },\r\n  { title: \"Whiplash\", year: 2014 },\r\n  { title: \"Gladiator\", year: 2000 },\r\n  { title: \"Memento\", year: 2000 },\r\n  { title: \"The Prestige\", year: 2006 },\r\n  { title: \"The Lion King\", year: 1994 },\r\n  { title: \"Apocalypse Now\", year: 1979 },\r\n  { title: \"Alien\", year: 1979 },\r\n  { title: \"Sunset Boulevard\", year: 1950 },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport { filterConditions, top100Films } from \"./Constants\";\r\n\r\nexport default function AutocompleteComponent() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [checked, setChecked] = useState(true);\r\n  const [filterValue, setFilterValue] = useState([\":\"]);\r\n\r\n  useEffect(() => {\r\n    const input = inputValue.slice(\r\n      inputValue.lastIndexOf(\":\", inputValue.length - 1)\r\n    );\r\n    if (filterValue.length > 1)\r\n      setInputValue(filterValue.reverse().join(\" \").concat(input));\r\n  }, [filterValue]);\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    if (event.target.checked) {\r\n      setFilterValue([...new Set([...filterValue, event.target.name])]);\r\n    } else {\r\n      setFilterValue(filterValue.filter((fv) => fv !== event.target.name));\r\n    }\r\n  };\r\n\r\n  const filterSection = () => (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"60%\",\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      {filterConditions.map((filterCondition, index) => (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          key={index}\r\n        >\r\n          {filterCondition}:\r\n          <Checkbox\r\n            id={filterCondition}\r\n            name={filterCondition}\r\n            value={checked}\r\n            color=\"default\"\r\n            inputProps={{\r\n              \"aria-label\": \"checkbox with default color\",\r\n              name: filterCondition,\r\n            }}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const handleAutoCompleteChange = (event) => {\r\n    setInputValue(inputValue + event.target.textContent + \" , \");\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const filterOptions = (options) => {\r\n    const inputOnFilter =\r\n      inputValue.indexOf(\":\") > 0\r\n        ? inputValue.slice(inputValue.lastIndexOf(\":\") + 1, inputValue.length)\r\n        : inputValue;\r\n\r\n    if (inputOnFilter)\r\n      return options.filter((option) => option?.includes(inputOnFilter));\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      Filters : {filterSection()}\r\n      <Autocomplete\r\n        getOptionLabel={(option) => option}\r\n        options={top100Films.map((option) => option.title)}\r\n        filterOptions={filterOptions}\r\n        size={\"small\"}\r\n        style={{ flexGrow: 2, margin: \"10px\", padding: \"10px\" }}\r\n        onChange={handleAutoCompleteChange}\r\n        value={inputValue}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            placeholder=\"Filter Items\"\r\n            onChange={handleInputChange}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export const setStudies = (study) => ({\r\n  type: \"SET_STUDY\",\r\n  payload: study,\r\n});\r\n","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst FormInput = ({ name, label, handleInput, otherProps }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {label}\r\n      <TextField id={name} name={name} onChange={handleInput} {...otherProps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst FormButton = ({ title, name, handleClick, ...otherProps }) => {\r\n  return (\r\n    <Button name={name} onClick={handleClick} {...otherProps}>\r\n      {title}\r\n    </Button>\r\n  );\r\n};\r\nexport default FormButton;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setStudies } from \"../../Redux/Actions/Study.actions\";\r\n\r\nimport FormInput from \"../../Components/FormInput.component\";\r\nimport FormButton from \"../../Components/FormButton.component\";\r\n\r\nconst Study = ({ studies, setStudies }) => {\r\n  const [study, setStudy] = useState(\"\");\r\n  const handleClick = (event) => {\r\n    console.log(study);\r\n    setStudies(study);\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    setStudy(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: \"40%\", margin: \"auto\" }}>\r\n        <FormInput name=\"Study\" label=\"Details\" handleInput={handleInput} />\r\n        <FormButton name=\"add\" title=\"Add Study\" handleClick={handleClick} />\r\n      </div>\r\n      <h3>Studies</h3>\r\n      {studies?.map((sduty, index) => (\r\n        <div key={index}>{sduty}</div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  studies: state.study.studies,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setStudies: (study) => dispatch(setStudies(study)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Study);\r\n","import { Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./Redux/Store/store\";\n\nimport AutocompleteComponent from \"./Components/AutocompleteComponent\";\nimport Study from \"./Modules/Study/Study.component\";\n\nimport \"./App.css\";\n\n(async () => {\n  const promisify = (item, time) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(item + time);\n      }, time);\n    });\n  };\n\n  const a = promisify(\"a\", 8000);\n  const b = promisify(\"b\", 4000);\n  const c = promisify(\"c\", 6000);\n\n  // for await (let item of [a, b, c]) {\n  //   console.log(item);\n  // }\n\n  Promise.all([a, b, c]).then((res) => console.log(\"all\", res));\n  Promise.race([a, b, c]).then((res) => console.log(\"race\", res));\n  //sequences\n  const sequence = async () => {\n    return [await a, await b, await c, 123];\n  };\n  console.log(\"seq1\", sequence());\n  console.log(\"seq2\", sequence);\n  sequence().then((res) => console.log(res));\n})();\n\nfunction App() {\n  return (\n    <>\n      <AutocompleteComponent />\n      <Provider store={store}>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/study\" component={Study} />\n          </Switch>\n        </div>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}